@use 'sass:map';
@use 'sass:meta';
@use '../../forms/styles/variables.forms' as variables8;
@use '../../image/icons.clarity';
@use '../../modal/variables.modal' as variables9;
@use '../../popover/dropdown/variables.dropdown' as variables7;
@use '../../utils/mixins';
@use '../../utils/variables/variables.color' as variables2;
@use '../../utils/variables/variables.global';
@use '../../utils/variables/variables.layout' as variables3;
@use '../../utils/variables/variables.typography' as variables4;
@use '../tables.clarity';
@use '../variables.tables' as variables5;
@use 'variables.datagrid' as variables6;

/*
 * Copyright (c) 2016-2023 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */

@mixin clr-datagrid-header-bg {
  @include mixins.css-var(
    background-color,
    clr-thead-bgcolor,
    variables5.$clr-thead-bgcolor,
    variables.$clr-use-custom-properties
  );
}

@mixin clr-datagrid-popover-shadows {
  $fallbackShadowColor: rgba(140, 140, 140, 0.25);
  // IE/OldEdge
  box-shadow: 0 variables.$clr_baselineRem_1px variables.$clr_baselineRem_3px $fallbackShadowColor;
  box-shadow: 0 variables.$clr_baselineRem_1px variables.$clr_baselineRem_3px
    var(--clr-datagrid-popovers-box-shadow-color, $fallbackShadowColor);
}

@include meta.load-css('properties.datagrid');

@include mixins.exports('datagrid.clarity') {
  @include tables.basic-table(
    '.datagrid',
    '.datagrid-header',
    '.datagrid-body',
    '.datagrid-row',
    '.datagrid-column',
    '.datagrid-cell'
  );

  .datagrid-host {
    display: flex;
    flex-flow: column nowrap;
    position: relative;
  }

  .datagrid {
    // Overrides the table defaults so the new structure has correct corners
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    -ms-overflow-style: -ms-autohiding-scrollbar;
    overflow: auto;
    flex: 1 1 auto;
    margin-top: variables.$clr_baselineRem_0_5;
  }

  .datagrid-container {
    width: auto;
    font-size: variables5.$clr-table-fontsize;
    padding: variables5.$clr-table-topcellpadding variables5.$clr-table-cellpadding
      variables5.$clr-table-bottomcellpadding;
  }

  .datagrid-expandable-caret {
    padding: variables.$clr_baselineRem_2px variables6.$horizontalPadding variables.$clr_baselineRem_0_125;
    text-align: center;

    .datagrid-expandable-caret-button {
      @include mixins.clr-no-styles-button();
      cursor: pointer;
      @include mixins.equilateral(variables.$clr_baselineRem_1_25);
    }

    .datagrid-expandable-caret-icon {
      @include mixins.css-var(
        color,
        clr-datagrid-icon-color,
        variables6.$clr-datagrid-icon-color,
        variables.$clr-use-custom-properties
      );
      // nudge down for vertical alignment...
      margin-top: variables.$clr_baselineRem_0_125;

      svg {
        transition: transform 0.2s ease-in-out;
      }
    }

    .spinner {
      margin-top: variables.$clr_baselineRem_0_25;
    }

    &.datagrid-column {
      padding: variables5.$clr-table-topcellpadding variables5.$clr-table-cellpadding
        variables5.$clr-table-bottomcellpadding;
    }
  }

  .datagrid-header,
  .datagrid-body,
  .datagrid-row,
  .datagrid-column,
  .datagrid-cell,
  .datagrid-fixed-column {
    display: block;
  }

  .datagrid-row {
    border-top-style: solid;
    @include mixins.css-var(
      border-top-width,
      clr-table-borderwidth,
      variables5.$clr-table-borderwidth,
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(
      border-top-color,
      clr-table-border-color,
      variables5.$clr-table-border-color,
      variables.$clr-use-custom-properties
    );

    &:first-of-type {
      border-top: none;
    }

    &:hover {
      @include mixins.css-var(
        background-color,
        clr-datagrid-row-hover-color,
        variables6.$clr-datagrid-row-hover-color,
        variables.$clr-use-custom-properties
      );

      .datagrid-row-sticky {
        @include mixins.css-var(
          background-color,
          clr-datagrid-row-hover-color,
          variables6.$clr-datagrid-row-hover-color,
          variables.$clr-use-custom-properties
        );
      }
    }

    &.datagrid-selected {
      @include mixins.css-var(
        color,
        clr-datagrid-row-selected,
        variables6.$clr-datagrid-row-selected,
        variables.$clr-use-custom-properties
      );
      @include mixins.css-var(
        background-color,
        clr-global-selection-color,
        variables.$clr-global-selection-color,
        variables.$clr-use-custom-properties
      );

      .datagrid-row-sticky {
        @include mixins.css-var(
          color,
          clr-datagrid-row-selected,
          variables6.$clr-datagrid-row-selected,
          variables.$clr-use-custom-properties
        );
        @include mixins.css-var(
          background-color,
          clr-global-selection-color,
          variables.$clr-global-selection-color,
          variables.$clr-use-custom-properties
        );
      }
    }

    .datagrid-action-overflow {
      position: absolute;
      @include mixins.css-var(
        background,
        clr-datagrid-popover-bg-color,
        variables6.$clr-datagrid-popover-bg-color,
        variables.$clr-use-custom-properties
      );
      padding: variables.$clr_baselineRem_0_25;
      margin-left: variables.$clr_baselineRem_0_25;
      border-style: solid;
      @include mixins.css-var(
        border-width,
        clr-global-borderwidth,
        variables.$clr-global-borderwidth,
        variables.$clr-use-custom-properties
      );
      @include mixins.css-var(
        border-color,
        clr-datagrid-popover-border-color,
        variables6.$clr-datagrid-popover-border-color,
        variables.$clr-use-custom-properties
      );
      @include clr-datagrid-popover-shadows;
      @include mixins.css-var(
        border-radius,
        clr-global-borderradius,
        variables.$clr-global-borderradius,
        variables.$clr-use-custom-properties
      );
      font-weight: normal;
      white-space: nowrap;

      &::before {
        content: '';
        position: absolute;
        top: 50%;
        right: 100%;
        @include mixins.equilateral(0);
        margin-top: -1 * variables6.$clr-datagrid-action-arrow-size;
        border-top: variables6.$clr-datagrid-action-arrow-size solid transparent;
        border-bottom: variables6.$clr-datagrid-action-arrow-size solid transparent;
        border-right-width: variables6.$clr-datagrid-action-arrow-size;
        border-right-style: solid;
        @include mixins.css-var(
          border-right-color,
          clr-datagrid-popover-border-color,
          variables6.$clr-datagrid-popover-border-color,
          variables.$clr-use-custom-properties
        );
      }

      &::after {
        content: '';
        position: absolute;
        top: 50%;
        right: 100%;
        @include mixins.equilateral(0);
        margin-top: -1 * variables6.$clr-datagrid-action-arrow-size + variables.$clr_baselineRem_1px;
        border-top: (variables6.$clr-datagrid-action-arrow-size - variables.$clr_baselineRem_1px) solid transparent;
        border-bottom: (variables6.$clr-datagrid-action-arrow-size - variables.$clr_baselineRem_1px) solid transparent;
        border-right-width: (variables6.$clr-datagrid-action-arrow-size - variables.$clr_baselineRem_1px);
        border-right-style: solid;
        @include mixins.css-var(
          border-right-color,
          clr-datagrid-popover-bg-color,
          variables6.$clr-datagrid-popover-bg-color,
          variables.$clr-use-custom-properties
        );
      }

      .action-item {
        @include mixins.css-var(
          color,
          clr-dropdown-text-color,
          variables7.$clr-dropdown-text-color,
          variables.$clr-use-custom-properties
        );

        font-size: variables7.$clr-dropdown-font-size;
        letter-spacing: variables7.$clr-dropdown-letter-spacing;

        background: transparent;
        border: 0;
        cursor: pointer;
        display: block;
        line-height: variables7.$clr-dropdown-line-height - variables.$clr_baselineRem_1px;
        margin: 0;
        padding: variables.$clr_baselineRem_1px variables.$clr_baselineRem_1 0;
        text-align: left;
        width: 100%;

        &:hover,
        &:focus {
          @include mixins.css-var(
            background-color,
            clr-datagrid-action-popover-hover-color,
            variables6.$clr-datagrid-action-popover-hover-color,
            variables.$clr-use-custom-properties
          );
          text-decoration: none;
        }

        &.active {
          @include mixins.css-var(
            background,
            clr-datagrid-row-hover-color,
            variables6.$clr-datagrid-row-hover-color,
            variables.$clr-use-custom-properties
          );
          @include mixins.css-var(
            color,
            clr-color-neutral-1000,
            variables2.$clr-color-neutral-1000,
            variables.$clr-use-custom-properties
          );
        }

        &:focus {
          outline: 0;
        }

        &.disabled,
        &:disabled {
          cursor: not-allowed;
          opacity: 0.4;
          user-select: none;

          &:hover {
            background: none;
          }

          &:active,
          &:focus {
            background: none;
            box-shadow: none;
          }
        }

        cds-icon,
        clr-icon {
          vertical-align: middle;
          transform: translate3d(0px, -1 * variables.$clr_baselineRem_1px, 0);
        }
      }
    }

    .datagrid-action-overflow {
      position: absolute;
      @include mixins.css-var(
        background,
        clr-datagrid-popover-bg-color,
        variables6.$clr-datagrid-popover-bg-color,
        variables.$clr-use-custom-properties
      );
      padding: variables.$clr_baselineRem_0_25;
      margin-left: variables.$clr_baselineRem_0_25;
      border-style: solid;
      @include mixins.css-var(
        border-width,
        clr-global-borderwidth,
        variables.$clr-global-borderwidth,
        variables.$clr-use-custom-properties
      );
      @include mixins.css-var(
        border-color,
        clr-datagrid-popover-border-color,
        variables6.$clr-datagrid-popover-border-color,
        variables.$clr-use-custom-properties
      );
      @include clr-datagrid-popover-shadows;
      @include mixins.css-var(
        border-radius,
        clr-global-borderradius,
        variables.$clr-global-borderradius,
        variables.$clr-use-custom-properties
      );
      font-weight: normal;
      white-space: nowrap;

      &::before {
        content: '';
        position: absolute;
        top: 50%;
        right: 100%;
        width: 0;
        height: 0;
        margin-top: -1 * variables6.$clr-datagrid-action-arrow-size;
        border-top: variables6.$clr-datagrid-action-arrow-size solid transparent;
        border-bottom: variables6.$clr-datagrid-action-arrow-size solid transparent;
        border-right-width: variables6.$clr-datagrid-action-arrow-size;
        border-right-style: solid;
        @include mixins.css-var(
          border-right-color,
          clr-datagrid-popover-border-color,
          variables6.$clr-datagrid-popover-border-color,
          variables.$clr-use-custom-properties
        );
      }

      &::after {
        content: '';
        position: absolute;
        top: 50%;
        right: 100%;
        width: 0;
        height: 0;
        margin-top: -1 * variables6.$clr-datagrid-action-arrow-size + variables.$clr_baselineRem_1px;
        border-top: (variables6.$clr-datagrid-action-arrow-size - variables.$clr_baselineRem_1px) solid transparent;
        border-bottom: (variables6.$clr-datagrid-action-arrow-size - variables.$clr_baselineRem_1px) solid transparent;
        border-right-width: (variables6.$clr-datagrid-action-arrow-size - variables.$clr_baselineRem_1px);
        border-right-style: solid;
        @include mixins.css-var(
          border-right-color,
          clr-datagrid-popover-bg-color,
          variables6.$clr-datagrid-popover-bg-color,
          variables.$clr-use-custom-properties
        );
      }

      .action-item {
        @include mixins.css-var(
          color,
          clr-dropdown-text-color,
          variables7.$clr-dropdown-text-color,
          variables.$clr-use-custom-properties
        );

        font-size: variables7.$clr-dropdown-font-size;
        letter-spacing: variables7.$clr-dropdown-letter-spacing;

        background: transparent;
        border: 0;
        cursor: pointer;
        display: block;
        line-height: variables7.$clr-dropdown-line-height - variables.$clr_baselineRem_1px;
        margin: 0;
        padding: variables.$clr_baselineRem_1px variables.$clr_baselineRem_1 0;
        text-align: left;
        width: 100%;

        &:hover,
        &:focus {
          @include mixins.css-var(
            background-color,
            clr-datagrid-action-popover-hover-color,
            variables6.$clr-datagrid-action-popover-hover-color,
            variables.$clr-use-custom-properties
          );
          text-decoration: none;
        }

        &.active {
          @include mixins.css-var(
            background,
            clr-datagrid-row-hover-color,
            variables6.$clr-datagrid-row-hover-color,
            variables.$clr-use-custom-properties
          );
          @include mixins.css-var(
            color,
            clr-color-neutral-1000,
            variables2.$clr-color-neutral-1000,
            variables.$clr-use-custom-properties
          );
        }

        &:focus {
          outline: 0;
        }

        &.disabled,
        &:disabled {
          cursor: not-allowed;
          opacity: 0.4;
          user-select: none;

          &:hover {
            background: none;
          }

          &:active,
          &:focus {
            background: none;
            box-shadow: none;
          }
        }

        cds-icon,
        clr-icon {
          vertical-align: middle;
          transform: translate3d(0px, -1 * variables.$clr_baselineRem_1px, 0);
        }
      }
    }

    .datagrid-action-overflow {
      position: absolute;
      @include mixins.css-var(
        background,
        clr-datagrid-popover-bg-color,
        variables6.$clr-datagrid-popover-bg-color,
        variables.$clr-use-custom-properties
      );
      padding: variables.$clr_baselineRem_0_25;
      margin-left: variables.$clr_baselineRem_0_25;
      @include mixins.css-var(
        border-width,
        clr-global-borderwidth,
        variables.$clr-global-borderwidth,
        variables.$clr-use-custom-properties
      );
      border-style: solid;
      @include mixins.css-var(
        border-color,
        clr-datagrid-popover-border-color,
        variables6.$clr-datagrid-popover-border-color,
        variables.$clr-use-custom-properties
      );
      @include clr-datagrid-popover-shadows;
      @include mixins.css-var(
        border-color,
        clr-global-borderradius,
        variables.$clr-global-borderradius,
        variables.$clr-use-custom-properties
      );
      font-weight: normal;
      white-space: nowrap;

      &::before {
        content: '';
        position: absolute;
        top: 50%;
        right: 100%;
        width: 0;
        height: 0;
        margin-top: -1 * variables6.$clr-datagrid-action-arrow-size;
        border-right: variables6.$clr-datagrid-action-arrow-size solid;
        @include mixins.css-var(
          border-right-color,
          clr-datagrid-popover-border-color,
          variables6.$clr-datagrid-popover-border-color,
          variables.$clr-use-custom-properties
        );
        border-top: variables6.$clr-datagrid-action-arrow-size solid transparent;
        border-bottom: variables6.$clr-datagrid-action-arrow-size solid transparent;
      }

      &::after {
        content: '';
        position: absolute;
        top: 50%;
        right: 100%;
        width: 0;
        height: 0;
        // not all browsers support calc() in psuedoelements
        margin-top: -1 * variables6.$clr-datagrid-action-arrow-size + variables.$clr_baselineRem_1px;
        border-right: (variables6.$clr-datagrid-action-arrow-size - variables.$clr_baselineRem_1px) solid
          variables6.$clr-datagrid-popover-bg-color;
        border-top: (variables6.$clr-datagrid-action-arrow-size - variables.$clr_baselineRem_1px) solid transparent;
        border-bottom: (variables6.$clr-datagrid-action-arrow-size - variables.$clr_baselineRem_1px) solid transparent;
      }

      .action-item {
        @include mixins.css-var(
          color,
          clr-dropdown-text-color,
          variables7.$clr-dropdown-text-color,
          variables.$clr-use-custom-properties
        );
        font-size: variables7.$clr-dropdown-font-size;
        letter-spacing: variables7.$clr-dropdown-letter-spacing;

        background: transparent;
        border: 0;
        cursor: pointer;
        display: block;
        line-height: variables7.$clr-dropdown-line-height - variables.$clr_baselineRem_1px;
        margin: 0;
        padding: variables.$clr_baselineRem_1px variables.$clr_baselineRem_1 0;
        text-align: left;
        width: 100%;

        &:hover,
        &:focus {
          text-decoration: none;
          @include mixins.css-var(
            background-color,
            clr-datagrid-action-popover-hover-color,
            variables6.$clr-datagrid-action-popover-hover-color,
            variables.$clr-use-custom-properties
          );
        }

        &.active {
          @include mixins.css-var(
            background,
            clr-datagrid-row-hover-color,
            variables6.$clr-datagrid-row-hover-color,
            variables.$clr-use-custom-properties
          );
          @include mixins.css-var(
            color,
            clr-datagrid-row-hover-font-color,
            variables6.$clr-datagrid-row-hover-font-color,
            variables.$clr-use-custom-properties
          );
        }

        &:focus {
          outline: 0;
        }

        &.disabled,
        &:disabled {
          cursor: not-allowed;
          opacity: 0.4;
          user-select: none;

          &:hover {
            background: none;
          }

          &:active,
          &:focus {
            background: none;
            box-shadow: none;
          }
        }

        cds-icon,
        clr-icon {
          vertical-align: middle;
          transform: translate3d(0px, -1 * variables.$clr_baselineRem_1px, 0);
        }
      }
    }

    .datagrid-row-detail-wrapper {
      flex: 1 1 auto;
      display: flex;
    }

    .datagrid-row-detail {
      width: auto;

      .datagrid-cell {
        padding-top: 0;
        border: none;
      }
    }

    .datagrid-select {
      min-width: variables.$clr_baselineRem_0_375 - variables5.$clr-table-borderwidth; // This fixed an issue that made the cell too wide.
      align-items: center;

      .clr-checkbox-wrapper {
        display: block;
        // compensate for the default checkbox margin, defined in its ::before section
        margin-top: -1 * variables.$clr_baselineRem_0_25;
      }

      &,
      input {
        cursor: pointer;
      }

      &.clr-form-control-disabled {
        &,
        input {
          cursor: not-allowed;
        }
      }
    }

    .datagrid-signpost-trigger .signpost {
      margin: (-1 * variables.$clr_baselineRem_0_3) 0;
      height: variables.$clr_baselineRem_1_03;

      .signpost-trigger {
        height: inherit;
        line-height: variables.$clr_baselineRem_1;
      }
    }

    .datagrid-action-overflow {
      z-index: map.get(variables.$clr-layers, datagrid-popover);
    }

    .datagrid-row-sticky {
      z-index: map.get(variables.$clr-layers, datagrid-row-sticky);
    }
  }

  .datagrid-row-sticky {
    @include mixins.css-var(
      background-color,
      clr-table-bgcolor,
      variables5.$clr-table-bgcolor,
      variables.$clr-use-custom-properties
    );
    display: flex;
    flex-wrap: nowrap;
    position: sticky;
    left: 0;
    z-index: map.get(variables.$clr-layers, datagrid-header-sticky);

    .datagrid-cell:last-child {
      &:after {
        content: '';
        width: 0.05rem;
        height: calc(100% - 0.5rem);
        position: absolute;
        right: 0;
        top: 0.25rem;
        @include mixins.css-var(
          background-color,
          clr-table-border-color,
          variables5.$clr-table-border-color,
          variables.$clr-use-custom-properties
        );
      }
    }
  }

  .datagrid-row-scrollable {
    flex: 1 1 auto;
    display: flex;
    flex-flow: column nowrap;

    &.is-replaced {
      flex-direction: row;

      .datagrid-scrolling-cells {
        flex: 0 0 auto;
      }
    }

    .datagrid-column:last-child {
      .datagrid-column-separator {
        display: none;
      }
    }
  }

  .datagrid-row-flex {
    flex: 1 1 auto;
    display: flex;
    flex-flow: row nowrap;

    .datagrid-row-detail {
      display: flex;
      flex-flow: row nowrap;

      .datagrid-cell {
        padding-top: 0;
      }
    }
  }

  .datagrid-scrolling-cells,
  .datagrid-scrolling-details {
    display: flex;
    flex: 1 1 auto;
    flex-flow: row nowrap;
  }

  .datagrid-action-bar {
    margin-top: variables.$clr_baselineRem_1;

    // This changes the height and position of the datagrid-spinner when there is an action-bar
    // Allows us to cover the action-bar with the spinner backgdrop and prevent user interactions.
    & ~ .datagrid-spinner {
      height: calc(100% - #{variables.$clr_baselineRem_1});
      top: variables.$clr_baselineRem_1; // Account for the margin above the datagrid-action-bar
    }
  }

  .datagrid-header {
    position: sticky;
    top: 0;
    // bug(popover): prevents action-overflow from being on top (first row).
    // Needed to keep select/radio and expand svgs underneath header on scrolling
    z-index: map.get(variables.$clr-layers, datagrid-header);
    width: auto;

    .datagrid-column {
      border-bottom: none;
    }

    .datagrid-row {
      @include clr-datagrid-header-bg;

      border-top: none;
      border-bottom-style: solid;
      @include mixins.css-var(
        border-bottom-width,
        clr-global-borderwidth,
        variables.$clr-global-borderwidth,
        variables.$clr-use-custom-properties
      );
      @include mixins.css-var(
        border-bottom-color,
        clr-table-border-color,
        variables5.$clr-table-border-color,
        variables.$clr-use-custom-properties
      );

      .datagrid-row-sticky {
        @include clr-datagrid-header-bg;
        z-index: map.get(variables.$clr-layers, datagrid-sticky-header);
      }

      &:hover {
        @include clr-datagrid-header-bg;

        .datagrid-row-sticky {
          @include clr-datagrid-header-bg;
        }
      }
    }

    .datagrid-row-scrollable {
      flex-direction: row;
    }
  }

  .datagrid-table-wrapper {
    display: flex;
    flex: 1 1 auto;
    min-height: 100%;
  }

  .datagrid-table {
    display: flex;
    flex-direction: column;
    flex: 1 1 auto;
    align-content: flex-start;

    .datagrid-body {
      width: auto;
    }

    .datagrid-column {
      text-align: left;
      min-width: variables.$clr_baselineRem_4;
      display: flex;
      flex: 1 1 auto;
      vertical-align: top;
      border: none;

      &:focus {
        outline: -webkit-focus-ring-color solid variables.$clr_baselineRem_2px;
        outline-offset: -(variables.$clr_baselineRem_2px);
      }

      clr-dg-filter,
      clr-dg-string-filter,
      clr-dg-numeric-filter {
        display: flex;
        order: 99;
        margin-left: auto;
        align-items: center;
      }

      .datagrid-filter-input-spacer {
        width: variables.$clr_baselineRem_0_5;
        display: inline-block;
      }

      .datagrid-numeric-filter-input {
        width: variables.$clr_baselineRem_78px;
      }

      .datagrid-filter-toggle {
        @include mixins.clr-no-styles-button();
        cursor: pointer;
        float: right;
        vertical-align: middle;
        @include mixins.equilateral(variables6.$clr-datagrid-icon-size);
        margin-left: variables.$clr_baselineRem_0_25;
        background-repeat: no-repeat;
        background-size: contain;

        cds-icon,
        clr-icon {
          @include mixins.css-var(
            color,
            clr-color-neutral-600,
            variables2.$clr-color-neutral-600,
            variables.$clr-use-custom-properties
          );
        }

        &:hover {
          cds-icon,
          clr-icon {
            @include mixins.css-var(
              color,
              clr-color-action-600,
              variables2.$clr-color-action-600,
              variables.$clr-use-custom-properties
            );
          }
        }

        &.datagrid-filter-open {
          cds-icon,
          clr-icon {
            @include mixins.css-var(
              color,
              clr-color-action-600,
              variables2.$clr-color-action-600,
              variables.$clr-use-custom-properties
            );
          }
        }

        &.datagrid-filtered {
          cds-icon,
          clr-icon {
            @include mixins.css-var(
              color,
              clr-color-action-600,
              variables2.$clr-color-action-600,
              variables.$clr-use-custom-properties
            );
          }
        }
      }

      .datagrid-filter {
        top: 100%;
        right: 0;
        margin-top: variables.$clr_baselineRem_0_2;
        @include mixins.css-var(
          background,
          clr-datagrid-popover-bg-color,
          variables6.$clr-datagrid-popover-bg-color,
          variables.$clr-use-custom-properties
        );
        padding: variables.$clr_baselineRem_0_75;
        border-style: solid;
        @include mixins.css-var(
          border-width,
          clr-global-borderwidth,
          variables.$clr-global-borderwidth,
          variables.$clr-use-custom-properties
        );
        @include mixins.css-var(
          border-color,
          clr-datagrid-popover-border-color,
          variables6.$clr-datagrid-popover-border-color,
          variables.$clr-use-custom-properties
        );
        @include clr-datagrid-popover-shadows;
        @include mixins.css-var(
          border-radius,
          clr-global-borderradius,
          variables.$clr-global-borderradius,
          variables.$clr-use-custom-properties
        );
        font-weight: normal;

        .datagrid-filter-close-wrapper {
          text-align: right;

          .close {
            float: none;
          }
        }

        // FIXME: remove
        .datagrid-filter-apply {
          margin-bottom: 0;
        }
      }

      .datagrid-filter {
        top: 100%;
        right: 0;
        margin-top: variables.$clr_baselineRem_0_2;
        @include mixins.css-var(
          background,
          clr-datagrid-popover-bg-color,
          variables6.$clr-datagrid-popover-bg-color,
          variables.$clr-use-custom-properties
        );
        padding: variables.$clr_baselineRem_0_75;
        border-style: solid;
        @include mixins.css-var(
          border-width,
          clr-global-borderwidth,
          variables.$clr-global-borderwidth,
          variables.$clr-use-custom-properties
        );
        @include mixins.css-var(
          border-color,
          clr-datagrid-popover-border-color,
          variables6.$clr-datagrid-popover-border-color,
          variables.$clr-use-custom-properties
        );
        @include clr-datagrid-popover-shadows;
        @include mixins.css-var(
          border-radius,
          clr-global-borderradius,
          variables.$clr-global-borderradius,
          variables.$clr-use-custom-properties
        );
        font-weight: normal;

        .datagrid-filter-close-wrapper {
          text-align: right;

          .close {
            float: none;
          }
        }

        // FIXME: remove
        .datagrid-filter-apply {
          margin-bottom: 0;
        }
      }

      .datagrid-filter {
        top: 100%;
        right: 0;
        margin-top: variables.$clr_baselineRem_0_2;
        @include mixins.css-var(
          background,
          clr-datagrid-popover-bg-color,
          variables6.$clr-datagrid-popover-bg-color,
          variables.$clr-use-custom-properties
        );
        padding: variables.$clr_baselineRem_0_75;
        @include mixins.css-var(
          border-width,
          clr-global-borderwidth,
          variables.$clr-global-borderwidth,
          variables.$clr-use-custom-properties
        );
        @include mixins.css-var(
          border-color,
          clr-datagrid-popover-border-color,
          variables6.$clr-datagrid-popover-border-color,
          variables.$clr-use-custom-properties
        );
        border-style: solid;
        @include clr-datagrid-popover-shadows;
        @include mixins.css-var(
          border-radius,
          clr-global-borderradius,
          variables.$clr-global-borderradius,
          variables.$clr-use-custom-properties
        );
        font-weight: normal;

        .datagrid-filter-close-wrapper {
          text-align: right;

          .close {
            float: none;
          }
        }

        // FIXME: remove
        .datagrid-filter-apply {
          margin-bottom: 0;
        }
      }

      &.datagrid-fixed-width {
        flex: 0 0 auto;
      }

      .datagrid-column-flex {
        display: flex;
        flex: 1 1 auto;
      }

      .datagrid-column-title {
        @include mixins.clr-no-styles-button();
        @include mixins.css-var(
          color,
          clr-table-font-color,
          variables5.$clr-table-font-color,
          variables.$clr-use-custom-properties
        );
        text-align: left;
        flex: 1 1 auto;
        align-items: center;
        align-self: center;
        display: flex;

        .signpost .signpost-action.btn {
          height: inherit;
          line-height: inherit;
        }

        // Override checkbox labels only when they are in a column. This allows them to be vertically centered.
        .clr-checkbox-wrapper .clr-control-label {
          margin-top: -1 * variables.$clr_baselineRem_0_4;
        }
      }

      button.datagrid-column-title {
        &:hover {
          text-decoration: underline;
          cursor: pointer;
        }

        .sort-icon {
          @include mixins.css-var(
            color,
            clr-color-action-600,
            variables2.$clr-color-action-600,
            variables.$clr-use-custom-properties
          );
          margin-left: auto; // pushes icon to rhs b/c of parents display: flex
          @include mixins.equilateral(variables6.$clr-datagrid-icon-size);
          vertical-align: middle;
        }
      }

      .datagrid-column-separator {
        $dg-padding-less-border: variables.$clr_baselineRem_0_5 - variables.$clr_baselineRem_1px;
        position: relative;
        left: variables.$clr_baselineRem_0_5;
        flex: 0 0 auto;
        @include mixins.css-var(
          width,
          clr-global-borderwidth,
          variables.$clr-global-borderwidth,
          variables.$clr-use-custom-properties
        );
        order: 100;
        margin-left: auto;
        height: 100%;

        &::after {
          content: '';
          position: absolute;
          height: calc(
            100% + #{variables6.$clr-datagrid-column-separator-expandby} - #{variables.$clr-global-borderwidth}
          );
          width: variables.$clr_baselineRem_1px;
          top: calc(-0.5 * #{variables6.$clr-datagrid-column-separator-expandby} + #{variables.$clr_baselineRem_1px});
          left: 0;
          @include mixins.css-var(
            background-color,
            clr-table-border-color,
            variables5.$clr-table-border-color,
            variables.$clr-use-custom-properties
          );
        }

        .datagrid-column-handle {
          @include mixins.clr-no-styles-button();
          position: absolute;
          width: variables.$clr_baselineRem_0_5 + variables.$clr_baselineRem_1px;
          right: -1 * variables.$clr_baselineRem_0_25;
          top: -1 * variables.$clr_baselineRem_0_25;
          cursor: col-resize;
          height: calc(100% + #{variables.$clr_baselineRem_0_5} - #{variables.$clr-global-borderwidth});
          z-index: map.get(variables.$clr-layers, datagrid-header);
        }

        .datagrid-column-resize-tracker {
          position: absolute;
          top: -1 * variables.$clr_baselineRem_0_5;
          display: none;
          width: variables.$clr_baselineRem_1px;
          height: 0;
          border-right-style: dotted;
          @include mixins.css-var(
            border-right-color,
            clr-color-action-300,
            variables2.$clr-color-action-300,
            variables.$clr-use-custom-properties
          );
          @include mixins.css-var(
            border-right-width,
            clr-global-borderwidth,
            variables.$clr-global-borderwidth,
            variables.$clr-use-custom-properties
          );
          transform: translateX(0px);
          cursor: col-resize;

          &.on-arrow-key-resize {
            transition: transform 0.2s ease-out;
          }
        }

        .exceeded-max {
          // TODO: CSS property here?
          border-right: variables.$clr-global-borderwidth dotted rgba(219, 33, 0, 0.3);
        }
      }

      .datagrid-signpost-trigger .signpost {
        margin: (-1 * variables.$clr_baselineRem_0_3) 0;
        height: variables.$clr_baselineRem_1_03;

        .signpost-trigger {
          height: inherit;
          line-height: variables.$clr_baselineRem_1;
        }
      }

      &.datagrid-select,
      &.datagrid-expandable-caret,
      &.datagrid-row-actions {
        max-width: variables6.$clr-datagrid-fixed-column-size;
        min-width: variables6.$clr-datagrid-fixed-column-size;
      }
    }

    .datagrid-cell {
      flex: 1 1 auto;
      text-align: left;
      min-width: variables.$clr_baselineRem_4;
      border: none;

      // TODO can width/column classes be combined? width is added programetically as part of rendering, column is
      //  class in template
      &.datagrid-fixed-width {
        flex: 0 0 auto;
      }

      &.datagrid-fixed-column {
        flex: 0 0 variables6.$clr-datagrid-fixed-column-size;
        max-width: variables6.$clr-datagrid-fixed-column-size;
        min-width: variables6.$clr-datagrid-fixed-column-size;
      }

      &.datagrid-row-actions {
        background: none;
      }

      &.datagrid-expandable-caret {
        padding: variables.$clr_baselineRem_2px variables6.$horizontalPadding variables.$clr_baselineRem_0_125;
        text-align: center;
      }

      &:focus {
        outline: -webkit-focus-ring-color solid variables.$clr_baselineRem_2px;
        outline-offset: -(variables.$clr_baselineRem_2px);
      }

      .datagrid-action-toggle {
        @include mixins.clr-no-styles-button();

        cds-icon,
        clr-icon {
          @include mixins.css-var(
            color,
            clr-datagrid-icon-color,
            variables6.$clr-datagrid-icon-color,
            variables.$clr-use-custom-properties
          );
        }

        &:active {
          cds-icon,
          clr-icon {
            // Fixed active state on this button for Safari.
            @include mixins.css-var(
              color,
              clr-datagrid-action-toggle-color,
              variables6.$clr-datagrid-action-toggle-color,
              variables.$clr-use-custom-properties
            );
          }
        }
      }

      // align toggle input to row hight
      .clr-toggle-wrapper {
        margin-top: -1 * variables.$clr_baselineRem_0_55;
        padding-top: variables.$clr_baselineRem_0_35;
      }
    }

    .datagrid-placeholder-container {
      flex: 1 1 auto;
      display: flex;
      justify-content: center;
      border-top-style: solid;
      @include mixins.css-var(
        border-top-color,
        clr-table-border-color,
        variables5.$clr-table-border-color,
        variables.$clr-use-custom-properties
      );
      @include mixins.css-var(
        border-top-width,
        clr-global-borderwidth,
        variables.$clr-global-borderwidth,
        variables.$clr-use-custom-properties
      );
    }

    .datagrid-placeholder {
      @include mixins.css-var(
        background,
        clr-table-bgcolor,
        variables5.$clr-table-bgcolor,
        variables.$clr-use-custom-properties
      );
      display: none;
      width: 100%;

      &.datagrid-empty {
        border-top: 0;
        padding: variables.$clr_baselineRem_0_5;
        display: flex;
        flex-flow: column nowrap;
        align-items: center;
        justify-content: flex-start;
        @include mixins.css-var(
          font-size,
          clr-datagrid-placeholder-font-size,
          variables6.$clr-datagrid-placeholder-font-size,
          variables.$clr-use-custom-properties
        );
        @include mixins.css-var(
          color,
          clr-datagrid-placeholder-color,
          variables6.$clr-datagrid-placeholder-color,
          variables.$clr-use-custom-properties
        );
      }

      .datagrid-placeholder-image {
        @include mixins.equilateral(variables.$clr_baselineRem_2_5);
        margin-bottom: variables.$clr_baselineRem_0_5;
        background-repeat: no-repeat;
        background-size: contain;
        background-position: center;
        background-image: icons.generateEmptyDatagridPlaceholder();
      }
    }

    .datagrid-hidden-column {
      &.datagrid-column,
      &.datagrid-cell {
        display: none;
      }
    }
  }

  .datagrid-row-replaced {
    .datagrid-scrolling-cells {
      .datagrid-cell {
        // Keep row action cells so they can be used.
        &:not(.datagrid-expandable-caret):not(.datagrid-row-actions):not(.datagrid-select) {
          display: none;
        }
      }
    }

    .datagrid-row-detail {
      .datagrid-cell {
        display: block;
        padding-top: variables.$clr_baselineRem_0_458;

        &.datagrid-hidden-column {
          display: none;
        }
      }

      .datagrid-expandable-caret {
        padding-top: variables.$clr_baselineRem_2px;
      }

      &.datagrid-container {
        border-top: variables.$clr-global-borderwidth solid variables5.$clr-table-border-color;

        .datagrid-cell {
          border-top: none;
        }
      }
    }
  }

  .datagrid-footer {
    flex: 0 0 auto;
    display: flex;
    flex-flow: row nowrap;
    justify-content: space-between;
    align-items: stretch;
    padding: 0 variables5.$clr-table-cellpadding;
    // Account for borders
    line-height: variables.$clr_baselineRem_1_5 - (3 * variables.$clr-global-borderwidth);
    font-size: variables5.$clr-thead-font-size;
    @include mixins.css-var(
      background-color,
      clr-thead-bgcolor,
      variables5.$clr-thead-bgcolor,
      variables.$clr-use-custom-properties
    );
    border-style: solid;
    @include mixins.css-var(
      border-color,
      clr-table-footer-border-top-color,
      variables5.$clr-table-footer-border-top-color,
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(
      border-width,
      clr-global-borderwidth,
      variables.$clr-global-borderwidth,
      variables.$clr-use-custom-properties
    );
    border-top: none;
    border-radius: 0;
    @include mixins.css-var(
      border-bottom-right-radius,
      clr-global-borderradius,
      variables.$clr-global-borderradius,
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(
      border-bottom-left-radius,
      clr-global-borderradius,
      variables.$clr-global-borderradius,
      variables.$clr-use-custom-properties
    );

    .pagination {
      display: flex;
      align-items: center;
      flex-wrap: wrap;
      justify-content: flex-end;
      line-height: variables.$clr_baselineRem_1_5;

      &-size {
        display: block;
        flex: 1 1 auto;
        white-space: nowrap;
        text-align: right;

        .clr-select-wrapper {
          &::after {
            top: variables.$clr_baselineRem_0_5;
          }
        }

        .clr-page-size-select {
          font-size: 100%;
          margin-left: variables.$clr_baselineRem_0_5;
          height: variables.$clr_baselineRem_1;
          line-height: variables.$clr_baselineRem_1;
          vertical-align: middle;
        }

        & + .pagination-description {
          margin-left: variables.$clr_baselineRem_1;
        }
      }

      &-description {
        white-space: nowrap;
      }

      &-list {
        margin-left: variables.$clr_baselineRem_1;
        display: flex;
        align-items: center;
      }
    }

    .column-switch-wrapper {
      position: relative;
      flex: 0 0 auto;
      display: flex;
      align-items: center;

      .column-toggle--action {
        // I'm overriding .btn/.btn-link here but am not confident this is the correct way to do it.
        min-width: variables.$clr_baselineRem_0_75;
        padding-left: variables.$clr_baselineRem_6px;
        padding-right: variables.$clr_baselineRem_6px;
        text-transform: capitalize;
        @include mixins.css-var(
          border-color,
          clr-datagrid-column-toggle-border-color,
          variables6.$clr-datagrid-column-toggle-border-color,
          variables.$clr-use-custom-properties
        );
        @include mixins.css-var(
          background-color,
          clr-datagrid-column-toggle-fill-color,
          variables6.$clr-datagrid-column-toggle-fill-color,
          variables.$clr-use-custom-properties
        );
        @include mixins.css-var(
          color,
          clr-datagrid-column-toggle-text-color,
          variables6.$clr-datagrid-column-toggle-text-color,
          variables.$clr-use-custom-properties
        );

        &:hover {
          @include mixins.css-var(
            border-color,
            clr-datagrid-column-toggle-border-hover-color,
            variables6.$clr-datagrid-column-toggle-border-hover-color,
            variables.$clr-use-custom-properties
          );
          @include mixins.css-var(
            background-color,
            clr-datagrid-column-toggle-fill-hover-color,
            variables6.$clr-datagrid-column-toggle-fill-hover-color,
            variables.$clr-use-custom-properties
          );
          @include mixins.css-var(
            color,
            clr-datagrid-column-toggle-text-hover-color,
            variables6.$clr-datagrid-column-toggle-text-hover-color,
            variables.$clr-use-custom-properties
          );
        }
        &:active,
        &:focus {
          box-shadow: none;
          @include mixins.css-var(
            border-color,
            clr-datagrid-column-toggle-border-active-color,
            variables6.$clr-datagrid-column-toggle-border-active-color,
            variables.$clr-use-custom-properties
          );
          @include mixins.css-var(
            background-color,
            clr-datagrid-column-toggle-fill-active-color,
            variables6.$clr-datagrid-column-toggle-fill-active-color,
            variables.$clr-use-custom-properties
          );
          @include mixins.css-var(
            color,
            clr-datagrid-column-toggle-text-active-color,
            variables6.$clr-datagrid-column-toggle-text-active-color,
            variables.$clr-use-custom-properties
          );
        }
      }

      .column-switch {
        @include mixins.css-var(
          border-radius,
          clr-global-borderradius,
          variables.$clr-global-borderradius,
          variables.$clr-use-custom-properties
        );
        @include mixins.css-var(
          background-color,
          clr-datagrid-popover-bg-color,
          variables6.$clr-datagrid-popover-bg-color,
          variables.$clr-use-custom-properties
        );
        @include mixins.css-var(
          border-color,
          clr-datagrid-popover-border-color,
          variables6.$clr-datagrid-popover-border-color,
          variables.$clr-use-custom-properties
        );
        @include mixins.css-var(
          border-width,
          clr-global-borderwidth,
          variables.$clr-global-borderwidth,
          variables.$clr-use-custom-properties
        );
        @include clr-datagrid-popover-shadows;
        padding: variables.$clr_baselineRem_0_75;
        border-style: solid;
        border-top: none;
        width: variables.$clr_baselineRem_10_416;
        display: flex;
        flex-direction: column;
        z-index: map.get(variables.$clr-layers, column-switch); // Keeps the popup above the datagrid header.

        .switch-header {
          display: flex;
          justify-content: space-between;
          font-weight: 400;
          font-size: variables.$clr_baselineRem_0_667;
          padding-bottom: variables.$clr_baselineRem_0_5;
          line-height: variables.$clr_baselineRem_1;

          button {
            min-width: variables.$clr_baselineRem_0_75;
            margin: 0;
            padding: 0;
          }
        }

        .switch-content {
          max-height: variables.$clr_baselineRem_12_5;
          overflow-y: auto;
          min-height: variables.$clr_baselineRem_1 + variables.$clr_baselineRem_1; // prevents scrollbars in IE.

          li {
            line-height: variables.$clr_baselineRem_1;
            padding-left: variables.$clr_baselineRem_2px;
          }
        }

        .switch-footer {
          .btn {
            margin: 0;
            padding: 0;
          }

          .action-right {
            display: flex;
            justify-content: flex-end;
          }
        }
      }

      .column-switch {
        @include mixins.css-var(
          border-radius,
          clr-global-borderradius,
          variables.$clr-global-borderradius,
          variables.$clr-use-custom-properties
        );
        @include mixins.css-var(
          background-color,
          clr-datagrid-popover-bg-color,
          variables6.$clr-datagrid-popover-bg-color,
          variables.$clr-use-custom-properties
        );
        @include mixins.css-var(
          border-width,
          clr-global-borderwidth,
          variables.$clr-global-borderwidth,
          variables.$clr-use-custom-properties
        );
        @include mixins.css-var(
          border-color,
          clr-datagrid-popover-border-color,
          variables6.$clr-datagrid-popover-border-color,
          variables.$clr-use-custom-properties
        );
        border-style: solid;
        @include clr-datagrid-popover-shadows;
        padding: variables.$clr_baselineRem_0_75;
        width: variables.$clr_baselineRem_10_416;
        display: flex;
        flex-direction: column;
        z-index: map.get(variables.$clr-layers, column-switch); // Keeps the popup above the datagrid header.

        .switch-header {
          display: flex;
          justify-content: space-between;
          font-weight: 400;
          font-size: variables.$clr_baselineRem_0_667;
          padding-bottom: variables.$clr_baselineRem_0_5;
          line-height: variables.$clr_baselineRem_1;

          button {
            min-width: variables.$clr_baselineRem_0_75;
            margin: 0;
            padding: 0;
            @include mixins.css-var(
              color,
              clr-datagrid-column-switch-header-font-color,
              variables6.$clr-datagrid-column-switch-header-font-color,
              variables.$clr-use-custom-properties
            );

            &:hover {
              @include mixins.css-var(
                color,
                clr-datagrid-column-switch-header-font-hover-color,
                variables6.$clr-datagrid-column-switch-header-font-hover-color,
                variables.$clr-use-custom-properties
              );
            }
          }
        }

        .switch-content {
          max-height: variables.$clr_baselineRem_12_5;
          overflow-y: auto;
          min-height: variables.$clr_baselineRem_1 + variables.$clr-global-borderwidth; // prevents scrollbars in IE.

          li {
            line-height: variables.$clr_baselineRem_1;
            padding-left: variables.$clr_baselineRem_2px;
          }
        }

        .switch-footer {
          .btn {
            margin: 0;
            padding: 0;
          }

          .action-right {
            display: flex;
            justify-content: flex-end;
          }
        }
      }
    }

    .clr-form-control-disabled {
      display: flex;
      align-items: center;
      height: 100%;
    }
  }

  .clr-form-control-disabled .datagrid-footer-select.clr-checkbox-wrapper input[type='checkbox']:checked + label {
    cursor: default;

    margin-right: variables.$clr_baselineRem_0_375;

    &::before {
      @include mixins.css-var(
        background-color,
        clr-color-neutral-600,
        variables2.$clr-color-neutral-600,
        variables.$clr-use-custom-properties
      );
    }

    &::after {
      @include mixins.css-var(
        border-left-color,
        clr-color-neutral-0,
        variables2.$clr-color-neutral-0,
        variables.$clr-use-custom-properties
      );
      @include mixins.css-var(
        border-bottom-color,
        clr-color-neutral-0,
        variables2.$clr-color-neutral-0,
        variables.$clr-use-custom-properties
      );
    }
  }

  .datagrid-spinner {
    position: absolute;
    display: flex;
    justify-content: center;
    align-items: center;
    width: 100%;
    top: variables.$clr_baselineRem_0_5;
    height: calc(100% - #{variables.$clr_baselineRem_0_5}); // Account for the margin above the datagrid-action-bar
    @include mixins.css-var(
      background-color,
      clr-datagrid-loading-background,
      variables6.$clr-datagrid-loading-background,
      variables.$clr-use-custom-properties
    );
    z-index: map.get(variables.$clr-layers, datagrid-host); // Keeps the spinner above the datagrid header.
  }

  .datagrid-select {
    .clr-control-label {
      min-height: variables.$clr_baselineRem_0_5;
      margin-top: -1 * variables.$clr_baselineRem_0_2;
      padding-left: variables.$clr_baselineRem_0_583;
    }
  }

  .datagrid-compact {
    .datagrid-header {
      min-height: variables.$clr_baselineRem_1;
    }

    .datagrid-column .datagrid-column-separator {
      &::after {
        height: calc(
          100% + 0.5 * #{variables6.$clr-datagrid-column-separator-expandby} - #{variables.$clr-global-borderwidth}
        );
        top: calc(-0.25 * #{variables6.$clr-datagrid-column-separator-expandby} + #{variables.$clr_baselineRem_1px});
      }
    }

    .datagrid-cell {
      clr-icon {
        margin-top: (-1 * variables.$clr_baselineRem_0_125) - variables.$clr_baselineRem_1px;
        margin-bottom: -1 * variables.$clr_baselineRem_0_125;
        transform: translateY(-1 * variables.$clr_baselineRem_1px);
      }

      cds-icon {
        margin-top: (-1 * variables.$clr_baselineRem_0_125) - variables.$clr_baselineRem_1px;
        margin-bottom: -1 * variables.$clr_baselineRem_0_125;
      }

      .badge {
        margin-top: -1 * variables.$clr_baselineRem_0_125;
        margin-bottom: -1 * variables.$clr_baselineRem_1px;
      }
    }

    .datagrid-expandable-caret {
      text-align: center;

      .spinner {
        margin-top: variables.$clr_baselineRem_0_125;
      }

      .datagrid-expandable-caret-button {
        @include mixins.clr-no-styles-button();
        @include mixins.equilateral(variables.$clr_baselineRem_1);
        outline-offset: variables6.$clr-datagrid-compact-outline-offset;
      }

      .datagrid-expandable-caret-icon {
        margin: 0;
      }

      &.datagrid-cell {
        padding: 0;
      }

      &.datagrid-column {
        padding-top: variables5.$clr-table--compact-verticalPadding + variables.$clr_baselineRem_1px;
        padding-bottom: variables5.$clr-table--compact-verticalPadding;
      }
    }

    .datagrid-signpost-trigger .signpost .signpost-trigger {
      cds-icon:not([shape='info-circle'], [shape='exclamation-triangle'], [shape='exclamation-circle'], [shape='check-circle'], [shape='info'], [shape='error']),
      clr-icon:not([shape='info-circle'], [shape='exclamation-triangle'], [shape='exclamation-circle'], [shape='check-circle'], [shape='info'], [shape='error']) {
        @include mixins.equilateral(variables.$clr_baselineRem_0_875);
      }
    }

    .datagrid-footer {
      padding: 0 variables5.$clr-table-cellpadding;
      line-height: variables.$clr_baselineRem_1 - variables.$clr_baselineRem_1px;

      .pagination {
        line-height: variables.$clr_baselineRem_1;
      }

      .column-switch-wrapper .column-toggle--action {
        margin: 0;
        outline-offset: variables6.$clr-datagrid-compact-outline-offset;
      }

      .clr-form-control-disabled .datagrid-footer-select.clr-checkbox-wrapper input[type='checkbox']:checked + label {
        top: 0;
      }
    }
  }

  .datagrid-footer-description {
    flex: 1 1 auto;
    flex-wrap: nowrap;
    white-space: nowrap;
    display: block;
    text-align: right;
    margin: auto 0;
  }

  // Yes, this is not .datagrid-pagination on purpose.
  // I've been told to consider a potential separate pagination component.
  .pagination-list {
    list-style: none;
    display: flex;
    flex-flow: row nowrap;
    justify-content: center;
    align-items: stretch;

    .pagination-current {
      background: none;
      @include mixins.css-var(
        background-color,
        clr-forms-textarea-background-color,
        variables8.$clr-forms-textarea-background-color,
        variables.$clr-use-custom-properties
      );
      @include mixins.css-var(
        border-color,
        clr-datagrid-pagination-input-border-color,
        variables6.$clr-datagrid-pagination-input-border-color,
        variables.$clr-use-custom-properties
      );
      @include mixins.css-var(
        border-width,
        clr-global-borderwidth,
        variables.$clr-global-borderwidth,
        variables.$clr-use-custom-properties
      );
      border-style: solid;
      @include mixins.css-var(
        border-radius,
        clr-global-borderradius,
        variables.$clr-global-borderradius,
        variables.$clr-use-custom-properties
      );
      line-height: variables.$clr_baselineRem_1;
      font-size: variables.$clr_baselineRem_0_458;
      min-width: variables.$clr_baselineRem_1;
      text-align: center;
      transition: none !important;

      &:focus,
      &.clr-focus {
        background: none;
        border: variables.$clr-global-borderwidth solid;
        @include mixins.css-var(
          border-color,
          clr-datagrid-pagination-input-border-focus-color,
          variables6.$clr-datagrid-pagination-input-border-focus-color,
          variables.$clr-use-custom-properties
        );
        box-shadow: 0 0 variables.$clr-global-borderwidth variables6.$clr-datagrid-pagination-input-border-focus-color;
        box-shadow: 0 0 var(--clr-global-borderwidth, variables.$clr-global-borderwidth)
          var(
            --clr-datagrid-pagination-input-border-focus-color,
            variables6.$clr-datagrid-pagination-input-border-focus-color
          );
      }
    }

    > * {
      padding: 0 variables.$clr_baselineRem_0_1;
    }

    $clr-pagination-extra-margin: variables.$clr_baselineRem_0_5;

    .pagination-first,
    .pagination-last,
    .pagination-previous,
    .pagination-next {
      display: flex;
      align-items: center;
      background-repeat: no-repeat;
      background-size: contain;
    }

    .pagination-first:disabled,
    .pagination-last:disabled,
    .pagination-previous:disabled,
    .pagination-next:disabled {
      @include mixins.css-var(
        color,
        clr-datagrid-pagination-btn-disabled-color,
        variables6.$clr-datagrid-pagination-btn-disabled-color,
        variables.$clr-use-custom-properties
      );
      @include mixins.css-var(
        opacity,
        clr-datagrid-pagination-btn-disabled-opacity,
        variables6.$clr-datagrid-pagination-btn-disabled-opacity,
        variables.$clr-use-custom-properties
      );
    }

    .pagination-first,
    .pagination-previous {
      margin-right: $clr-pagination-extra-margin;
    }

    .pagination-last,
    .pagination-next {
      margin-left: $clr-pagination-extra-margin;
    }

    button {
      @include mixins.clr-no-styles-button();
      @include mixins.css-var(
        color,
        clr-datagrid-pagination-btn-color,
        variables6.$clr-datagrid-pagination-btn-color,
        variables.$clr-use-custom-properties
      );
      // FIXME: this should be in the general reboot
      cursor: pointer;
    }
  }

  /*
        The following classes are used by the renderer when performing internal operations.
        Using the browser calculations improves rendering performance.
    */
  // This class is used by the dom-renderer.ts when testing cell for a user defined width.
  .datagrid-cell-width-zero {
    // Much zero. Such !important. Wow.
    border: 0 !important;
    padding: 0 !important;
    width: 0;
    flex: 0 0 auto !important;
    min-width: 0 !important;
    display: block !important;
  }

  /**
   * Detail pane
   */
  .datagrid-outer-wrapper {
    display: flex;
    flex-direction: row;
    flex-grow: 1;
    overflow: auto;
  }

  .datagrid-inner-wrapper {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    overflow: auto;
    min-width: variables.$clr_baselineRem_10;
  }

  .datagrid-detail-open {
    & > .datagrid-outer-wrapper > .datagrid-inner-wrapper {
      div.datagrid-table {
        /**
         * So the content with no spaces in the cell doesn't get cut when and the row selected indicator is not hidden
         * e.g. Helloworldthisisaveryveryveryveryverylongcontent
         */
        max-width: 100%;
        /**
         * To get rid of detail-pane overlapping the content inside the rows
         */
        overflow: hidden;
      }

      clr-dg-cell {
        /**
         * Since we use inline width of each column in order to maintain manual resizing,
         * we need to use !important to override the inline width.
         */
        width: 100% !important;
      }

      /**
       * Needed to prevent hidding the sorting and filtering icons
       */
      clr-dg-column:first-child {
        /**
          * Since we use inline width of each column in order to maintain manual resizing,
          * we need to use !important to override the inline width.
          */
        width: auto !important;
      }
    }

    .datagrid {
      border-top-right-radius: 0;
      border-right: none;
    }

    .datagrid-inner-wrapper {
      width: 34%;
    }

    .datagrid-placeholder-container,
    .datagrid-row {
      border-right: variables.$clr_baselineRem_1px solid variables5.$clr-table-border-color;
    }

    .datagrid-footer {
      border-bottom-right-radius: 0;
    }

    .pagination {
      width: 100%;
    }

    .pagination-description-compact {
      text-align: left;
      flex: 1;
    }

    .datagrid-footer .pagination-list {
      margin-right: 0;
    }
  }

  .datagrid-row-detail-open {
    position: relative;

    &:before {
      content: '';
      display: inline-block;
      position: absolute;
      border: variables.$clr_baselineRem_10px solid transparent;
      border-color: transparent;
      @include mixins.css-var(
        border-right-color,
        clr-table-border-color,
        variables5.$clr-table-border-color,
        variables.$clr-use-custom-properties
      );
      top: variables.$clr_baselineRem_0_5 - variables.$clr_baselineRem_2px;
      right: 0;
    }

    &:after {
      content: '';
      display: inline-block;
      position: absolute;
      border: variables.$clr_baselineRem_9px solid transparent;
      @include mixins.css-var(
        border-right-color,
        clr-datagrid-popover-bg-color,
        variables6.$clr-datagrid-popover-bg-color,
        variables.$clr-use-custom-properties
      );
      top: variables.$clr_baselineRem_0_5 - variables.$clr_baselineRem_1px;
      right: -1 * variables.$clr_baselineRem_1px;
    }
  }

  .datagrid-detail-pane {
    margin-top: variables.$clr_baselineRem_0_5;
    @include mixins.css-var(
      border-width,
      clr-global-borderwidth,
      variables.$clr-global-borderwidth,
      variables.$clr-use-custom-properties
    );
    border-style: solid;
    @include mixins.css-var(
      border-color,
      clr-datagrid-default-border-color,
      variables6.$clr-datagrid-default-border-color,
      variables.$clr-use-custom-properties
    );
    border-left: none;
    @include mixins.css-var(
      border-top-right-radius,
      clr-global-borderradius,
      variables.$clr-global-borderradius,
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(
      border-bottom-right-radius,
      clr-global-borderradius,
      variables.$clr-global-borderradius,
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(
      background,
      clr-datagrid-popover-bg-color,
      variables6.$clr-datagrid-popover-bg-color,
      variables.$clr-use-custom-properties
    );
    overflow: hidden;
    display: block;
    flex-grow: 2;
    width: 66%;
  }

  .datagrid-detail-pane-content {
    display: flex;
    flex-direction: column;
    overflow: auto;
    height: 100%;
  }

  .datagrid-detail-body {
    flex: 1 1 auto;
    padding: 0 variables.$clr_baselineRem_1;
  }

  .datagrid-detail-header {
    flex: 0 0 auto;
    font-size: variables.$clr_baselineRem_0_75;
    line-height: variables.$clr_baselineRem_1_4;
    padding-left: variables.$clr_baselineRem_1;
    margin-top: 0;
    display: flex;
    flex-direction: row;

    .datagrid-detail-header-title {
      flex: 1 1 auto;
      padding-top: variables.$clr_baselineRem_0_667;
    }

    .datagrid-detail-pane-close {
      flex: 1 1 variables.$clr_baselineRem_1_5;
      padding: 0;
      display: flex;
      justify-content: flex-end;

      .btn.btn-link {
        margin-top: variables.$clr_baselineRem_0_667;
        margin-bottom: 0;
        padding-right: 0;

        cds-icon {
          @include mixins.css-var(
            color,
            clr-modal-close-color,
            variables9.$clr-modal-close-color,
            variables.$clr-use-custom-properties
          );
        }
      }
    }
  }

  .datagrid-detail-caret {
    padding: 0;
    text-align: center;

    &.datagrid-cell {
      padding: variables.$clr_baselineRem_0_25 variables.$clr_baselineRem_0_375;
    }

    .datagrid-detail-caret-button {
      @include mixins.clr-no-styles-button();
      cursor: pointer;
      padding: (variables.$clr_baselineRem_0_125 - variables.$clr-global-borderwidth) variables6.$horizontalPadding
        variables.$clr_baselineRem_0_125;

      &.is-open {
        @include mixins.css-var(
          background-color,
          clr-datagrid-detail-caret-icon-open-bg-color,
          variables6.$clr-datagrid-detail-caret-icon-open-bg-color,
          variables.$clr-use-custom-properties
        );
        @include mixins.css-var(
          border-radius,
          clr-global-borderradius,
          variables.$clr-global-borderradius,
          variables.$clr-use-custom-properties
        );

        .datagrid-detail-caret-icon {
          @include mixins.css-var(
            color,
            clr-datagrid-detail-caret-icon-open-icon-color,
            variables6.$clr-datagrid-detail-caret-icon-open-icon-color,
            variables.$clr-use-custom-properties
          );
        }
      }
    }

    .datagrid-detail-caret-icon {
      @include mixins.css-var(
        color,
        clr-datagrid-icon-color,
        variables6.$clr-datagrid-icon-color,
        variables.$clr-use-custom-properties
      );
      // nudge down for vertical alignment...
      margin-top: variables.$clr_baselineRem_0_125 - variables.$clr_baselineRem_1px;
    }

    .spinner {
      margin-top: variables.$clr_baselineRem_0_25;
    }

    &.datagrid-column {
      padding: variables5.$clr-table-topcellpadding variables5.$clr-table-cellpadding
        variables5.$clr-table-bottomcellpadding;
    }
  }

  // Small screens should only display the detail pane when opened, or optionally forced by a class
  .datagrid-detail-overlay {
    // too specific query needed to avoid issues with nested datagrids
    &.datagrid-detail-open > .datagrid-outer-wrapper > .datagrid-inner-wrapper {
      display: none;
    }

    .datagrid-detail-pane {
      border-left: variables.$clr_baselineRem_1px solid variables5.$clr-table-border-color;
      border-radius: variables.$clr_baselineRem_0_125;
    }
  }

  @media screen and (max-width: map.get(variables3.$clr-grid-breakpoints, sm)) {
    // too specific query needed to avoid issues with nested datagrids
    .datagrid-detail-open > .datagrid-outer-wrapper > .datagrid-inner-wrapper {
      display: none;
    }

    .datagrid-detail-pane {
      border-left: variables.$clr_baselineRem_1px solid variables5.$clr-table-border-color;
      border-radius: variables.$clr_baselineRem_0_125;
    }
  }

  /**
   * Smart popover contents
   */
  .column-switch {
    @include mixins.css-var(
      border-radius,
      clr-global-borderradius,
      variables.$clr-global-borderradius,
      variables.$clr-use-custom-properties
    );
    padding: variables.$clr_baselineRem_0_75;
    @include mixins.css-var(
      background-color,
      clr-datagrid-popover-bg-color,
      variables6.$clr-datagrid-popover-bg-color,
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(
      border-width,
      clr-global-borderwidth,
      variables.$clr-global-borderwidth,
      variables.$clr-use-custom-properties
    );
    border-style: solid;
    @include mixins.css-var(
      border-color,
      clr-datagrid-popover-border-color,
      variables6.$clr-datagrid-popover-border-color,
      variables.$clr-use-custom-properties
    );
    @include clr-datagrid-popover-shadows();
    width: variables.$clr_baselineRem_10_416;
    display: flex;
    flex-direction: column;
    z-index: map.get(variables.$clr-layers, column-switch); // Keeps the popup above the datagrid header.

    .switch-header {
      display: flex;
      justify-content: space-between;
      font-weight: 400;
      font-size: variables.$clr_baselineRem_0_667;
      padding-bottom: variables.$clr_baselineRem_0_5;
      line-height: variables.$clr_baselineRem_1;

      // From accessibility perspective we let use of header tags inside the switch header,
      // but want not to be affected from the global header styles so this is a workaround.
      h1,
      h2,
      h3,
      h4,
      h5,
      h6 {
        @include mixins.css-var(color, clr-p1-color, variables4.$clr-p1-color, variables.$clr-use-custom-properties);
        font-weight: 400;
        font-size: 0.8rem;
        line-height: 1.2rem;
        margin: 0;
      }

      button {
        min-width: variables.$clr_baselineRem_0_75;
        margin: 0;
        padding: 0;
        @include mixins.css-var(
          color,
          clr-datagrid-column-switch-header-font-color,
          variables6.$clr-datagrid-column-switch-header-font-color,
          variables.$clr-use-custom-properties
        );

        &:hover {
          @include mixins.css-var(
            color,
            clr-datagrid-column-switch-header-font-hover-color,
            variables6.$clr-datagrid-column-switch-header-font-hover-color,
            variables.$clr-use-custom-properties
          );
        }
      }
    }

    .switch-content {
      max-height: variables.$clr_baselineRem_12_5;
      overflow-y: auto;
      min-height: variables.$clr_baselineRem_1 + variables.$clr-global-borderwidth; // prevents scrollbars in IE.

      li {
        line-height: variables.$clr_baselineRem_1;
        padding-left: variables.$clr_baselineRem_2px;
      }
    }

    .switch-footer {
      .btn {
        margin: 0;
        padding: 0;
      }

      .action-right {
        display: flex;
        justify-content: flex-end;
      }
    }
  }

  .datagrid-filter {
    margin-top: variables.$clr_baselineRem_0_2;
    @include mixins.css-var(
      background,
      clr-datagrid-popover-bg-color,
      variables6.$clr-datagrid-popover-bg-color,
      variables.$clr-use-custom-properties
    );
    @include mixins.css-var(
      border-width,
      clr-global-borderwidth,
      variables.$clr-global-borderwidth,
      variables.$clr-use-custom-properties
    );
    border-style: solid;
    @include mixins.css-var(
      border-color,
      clr-datagrid-popover-border-color,
      variables6.$clr-datagrid-popover-border-color,
      variables.$clr-use-custom-properties
    );
    padding: variables.$clr_baselineRem_0_75;
    @include clr-datagrid-popover-shadows;
    @include mixins.css-var(
      border-radius,
      clr-global-borderradius,
      variables.$clr-global-borderradius,
      variables.$clr-use-custom-properties
    );
    font-weight: normal;

    .datagrid-filter-close-wrapper {
      text-align: right;

      .close {
        float: none;
      }
    }

    // FIXME: remove
    .datagrid-filter-apply {
      margin-bottom: 0;
    }
  }

  .datagrid-action-overflow {
    position: absolute;
    @include mixins.css-var(
      background,
      clr-datagrid-popover-bg-color,
      variables6.$clr-datagrid-popover-bg-color,
      variables.$clr-use-custom-properties
    );
    padding: variables.$clr_baselineRem_0_25;
    margin-left: variables.$clr_baselineRem_0_25;
    @include mixins.css-var(
      border-width,
      clr-global-borderwidth,
      variables.$clr-global-borderwidth,
      variables.$clr-use-custom-properties
    );
    border-style: solid;
    @include mixins.css-var(
      border-color,
      clr-datagrid-popover-border-color,
      variables6.$clr-datagrid-popover-border-color,
      variables.$clr-use-custom-properties
    );
    @include clr-datagrid-popover-shadows;
    @include mixins.css-var(
      border-radius,
      clr-global-borderradius,
      variables.$clr-global-borderradius,
      variables.$clr-use-custom-properties
    );
    font-weight: normal;
    white-space: nowrap;

    &::before {
      content: '';
      position: absolute;
      top: 50%;
      right: 100%;
      width: 0;
      height: 0;
      margin-top: -1 * variables6.$clr-datagrid-action-arrow-size;
      border: variables6.$clr-datagrid-action-arrow-size solid transparent;
      border-left: 0 none;
      @include mixins.css-var(
        border-right-color,
        clr-datagrid-popover-border-color,
        variables6.$clr-datagrid-popover-border-color,
        variables.$clr-use-custom-properties
      );
    }

    &::after {
      content: '';
      position: absolute;
      top: 50%;
      right: 100%;
      width: 0;
      height: 0;
      // not all browsers support calc() in psuedoelements
      margin-top: -1 * variables6.$clr-datagrid-action-arrow-size + variables.$clr_baselineRem_1px;
      border-right: (variables6.$clr-datagrid-action-arrow-size - variables.$clr_baselineRem_1px) solid
        variables6.$clr-datagrid-popover-bg-color;
      border-top: (variables6.$clr-datagrid-action-arrow-size - variables.$clr_baselineRem_1px) solid transparent;
      border-bottom: (variables6.$clr-datagrid-action-arrow-size - variables.$clr_baselineRem_1px) solid transparent;
    }

    .action-item {
      @include mixins.css-var(
        color,
        clr-dropdown-text-color,
        variables7.$clr-dropdown-text-color,
        variables.$clr-use-custom-properties
      );
      font-size: variables7.$clr-dropdown-font-size;
      letter-spacing: variables7.$clr-dropdown-letter-spacing;

      background: transparent;
      border: 0;
      cursor: pointer;
      display: block;
      line-height: variables7.$clr-dropdown-line-height - variables.$clr_baselineRem_1px;
      margin: 0;
      padding: variables.$clr_baselineRem_1px variables.$clr_baselineRem_1 0;
      text-align: left;
      width: 100%;

      &:hover,
      &:focus {
        text-decoration: none;
        @include mixins.css-var(
          background-color,
          clr-datagrid-action-popover-hover-color,
          variables6.$clr-datagrid-action-popover-hover-color,
          variables.$clr-use-custom-properties
        );
      }

      &.active {
        @include mixins.css-var(
          background-color,
          clr-datagrid-row-hover-color,
          variables6.$clr-datagrid-row-hover-color,
          variables.$clr-use-custom-properties
        );
        @include mixins.css-var(
          color,
          clr-datagrid-row-hover-font-color,
          variables6.$clr-datagrid-row-hover-font-color,
          variables.$clr-use-custom-properties
        );
      }

      &:focus {
        outline: 0;
      }

      &.disabled,
      &:disabled {
        cursor: not-allowed;
        opacity: 0.4;
        user-select: none;

        &:hover {
          background: none;
        }

        &:active,
        &:focus {
          background: none;
          box-shadow: none;
        }
      }

      cds-icon,
      clr-icon {
        vertical-align: middle;
        transform: translate3d(0px, -1px, 0);
      }
    }
  }

  /* END Datagrid Smart Popover Content Styles

  /**
   * These classes are used in table-renderer.ts when it puts the datagrid into in tableMode and computes column
   * widths. NOTE: they are only applied during calculation and then removed.
   */

  /**
   * When in calculate mode
   * - Hide the display elements for datagrid
   * - Switch display mode for elements with projected content to calcualte sizes.
   */
  .datagrid-host.datagrid-calculate-mode {
    display: block;

    // Hide parts of the display table not used for calculation.
    .datagrid,
    .datagrid-footer,
    .datagrid-row-master,
    .datagrid-row-clickable {
      display: none;
    }

    .datagrid-calculation-table {
      display: table;
      table-layout: auto;

      .datagrid-calculation-header {
        display: table-header-group;

        .datagrid-column {
          display: table-cell;
          min-width: variables.$clr_baselineRem_4;
        }

        .datagrid-column {
          // This is a hack b/c styles were not applied out of the box when moving columns into the
          // calculation container element
          @include mixins.css-var(
            border-color,
            clr-tablerow-bordercolor,
            variables5.$clr-tablerow-bordercolor,
            variables.$clr-use-custom-properties
          );
          @include mixins.css-var(
            border-width,
            clr-table-borderwidth,
            variables5.$clr-table-borderwidth,
            variables.$clr-use-custom-properties
          );
          border-style: solid;
          padding: variables5.$clr-table-topcellpadding variables5.$clr-table-cellpadding
            variables5.$clr-table-bottomcellpadding;
          vertical-align: top;
          @include mixins.css-var(color, clr-p6-color, variables4.$clr-p6-color, variables.$clr-use-custom-properties);
          @include mixins.css-var(
            font-weight,
            clr-font-weight-bold,
            variables4.$clr-font-weight-bold,
            variables.$clr-use-custom-properties
          );
          font-size: variables4.$clr-typography-xxsmalltext;
          letter-spacing: variables4.$clr-kerning-tinytext;
          line-height: variables.$clr_baselineRem_0_5;
          margin-top: variables.$clr_baselineRem_1;
          margin-bottom: 0;
        }
      }

      .datagrid-row {
        display: table-row;

        .datagrid-cell {
          // This is a hack b/c styles were not applied out of the box when moving columns into the
          // calculation container element
          display: table-cell;
          min-width: variables.$clr_baselineRem_4;
          font-size: variables5.$clr-table-fontsize;
          line-height: variables5.$clr-table-lineheight;
          padding: variables5.$clr-table-topcellpadding variables5.$clr-table-cellpadding
            variables5.$clr-table-bottomcellpadding;
          vertical-align: top;
        }
      }
    }

    // Hide other elements that come along for the ride
    .datagrid-column-separator {
      display: none;
    }

    .datagrid-placeholder-container {
      display: none;
    }

    .datagrid-fixed-column {
      display: none;
    }
  }

  // END Calculation classes.
}
